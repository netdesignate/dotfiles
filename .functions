function myip(){ dig TXT +short o-o.myaddr.l.google.com @ns1.google.com | sed 's/"//g'; }
function aptmods(){apt list --installed | grep $1 | cut -d '/' -f1; }

# reverse DNS (convert IP to DNS name)
function dug() { dig +short -x $(dig +short $1); }

# convert to uppercase:
function uc() { echo "$@"|awk '{print toupper($0)}'; }

# convert to lowercase:
function lc() { echo "$@"|awk '{print tolower($0)}'; }

function histgrep() {
  local n_lines=20
  if [[ "$1" =~ ^[0-9]*$ ]]; then
    n_lines="$1"
    shift
  fi
  tac ~/.history | grep "$@" | tail -n "$n_lines"
}

function ipchk() {
  grep --color -ir $1 /cygdrive/c/Users/bf591ah/Documents/Supported_Tools/STEALTHWATCH/IPAM.txt
}

function dr8dl() {
  echo 'composer require drupal/$1'
  # composer require drupal/$1
}

function grepip() {
  grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' $1
}

function airport() {
  grep --color -ir $1 /cygdrive/c/Users/bf591ah/Documents/Supported_Tools/AUTOMATION/HGA/bluecat/Airports.txt
}

export -f histgrep
export -f ipchk
export -f myip
export -f aptmods
export -f dug
export -f dr8dl
export -f grepip
export -f airport
export -f uc
export -f lc

#=================
#[ 20191216-21:42:15 MySystem: eth5: RX: 2 Gb/s ]
#[ 20191216-21:42:20 MySystem: eth5: RX: 3 Gb/s ]
#[ 20191216-21:42:25 MySystem: eth5: RX: 2 Gb/s ]
#[ 20191216-21:42:30 MySystem: eth5: RX: 3 Gb/s ]
#[ 20191216-21:42:35 MySystem: eth5: RX: 2 Gb/s ]
#[ 20191216-21:42:40 MySystem: eth5: RX: 3 Gb/s ]
# Unfortunately only INT output ^^^
#
function humanValue()
{
    h=( '' K M G T P )
    i=1; v=$(( $1 * 8 ))
    while [ $v -gt $(( 1 << 10 * i )) ]; do let i++; done;
    echo -n "$(( $v >> 10 * --i )) ${h[i]}b/s";
}
export -f humanValue

# to get Interface Stats in friendly format, uncomment the below function:
# ========================================================================
# if="eth4"
# thisHost=$(hostname)
# date 
# declare -A RX2 TX2;
# while sleep 5; 
# do
#     for INTERFACE in $if;
#     do
#         RX1=$(cat /sys/class/net/${INTERFACE}/statistics/rx_bytes)
#         DOWN=$(( RX1 - RX2[$INTERFACE] ))
#         RX2[$INTERFACE]=$RX1;
#         echo -e "[ $(date +'%Y%m%d-%H:%M:%S') $thisHost: $INTERFACE:\tRX: $(humanValue $DOWN) ]"
#     done;
# done;
