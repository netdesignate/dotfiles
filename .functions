function myip(){ dig TXT +short o-o.myaddr.l.google.com @ns1.google.com | sed 's/"//g'; }
function aptmods(){ apt list --installed | grep $1 | cut -d '/' -f1; }

urldecode() { : "${*//+/ }"; echo -e "${_//%/\\x}"; }
# x="http%3A%2F%2Fstackoverflow.com%2Fsearch%3Fq%3Durldecode%2Bbash"
# y=$(urldecode "$x")
# echo "$y"

http://stackoverflow.com/search?q=urldecode+bash
# reverse DNS (convert IP to DNS name)
function dug() { dig +short -x $(dig +short $1); }

# convert to uppercase:
function uc() { echo "$@"|awk '{print toupper($0)}'; }

# convert to lowercase:
function lc() { echo "$@"|awk '{print tolower($0)}'; }

function histgrep() {
  local n_lines=20
  if [[ "$1" =~ ^[0-9]*$ ]]; then
    n_lines="$1"
    shift
  fi
  tac ~/.history | grep "$@" | tail -n "$n_lines"
}

function ipchk() {
  grep --color -ir $1 /cygdrive/c/Users/bf591ah/Documents/Supported_Tools/STEALTHWATCH/IPAM.txt
}

function dr8dl() {
  echo 'composer require drupal/$1'
  # composer require drupal/$1
}

function grepip() {
  grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' $1
}

function airport() {
  grep --color -ir $1 /cygdrive/c/Users/bf591ah/Documents/Supported_Tools/AUTOMATION/HGA/bluecat/Airports.txt
}

export -f histgrep
export -f ipchk
export -f myip
export -f aptmods
export -f dug
export -f dr8dl
export -f grepip
export -f airport
export -f uc
export -f lc

#=================
function bytesToHR()
{
  local SIZE=$1
  local UNITS="Bps KBps MBps GBps TBps PBps"
  for F in $UNITS; do
    local UNIT=$F
    test ${SIZE%.*} -lt 1024 && break;
    SIZE=$(echo "$SIZE / 1024" | bc -l)
  done

  if [ "$UNIT" == "B" ]; then
    printf "%4.0f    %s\n" $SIZE $UNIT
  else
    printf "%7.02f %s\n" $SIZE $UNIT
  fi
}

function ToK()
{ # down to multiples of 10**3
  local SIZE=$1
  local UNITS="pps Kpps Mpps Gpps Tpps Ppps"
  for F in $UNITS; do
    local UNIT=$F
    test ${SIZE%.*} -lt 1000 && break;
    SIZE=$(echo "$SIZE / 1000" | bc -l)
  done

  if [ "$UNIT" == "B" ]; then
    printf "%4.0f    %s\n" $SIZE $UNIT
  else
    printf "%7.02f %s\n" $SIZE $UNIT
  fi
}

function dpdk_rx()
{
  thisHost=$(hostname)
  interfc=$1
  interval=30
  # echo "I/F:bytes:packets:errs"  # Debugging 
  echo "[dpdk_rx] Tracking interface traffic for $interfc in $interval second intervals:"
  while true
  do
    # grep $interfc /FSS/log/dpdk_stats | awk '{print $1 $2 ":" $3 ":" $4 }' # To debug
    R1=`grep $interfc /FSS/log/dpdk_stats | awk '{print $2}'`
    PPS1=`grep $interfc /FSS/log/dpdk_stats | awk '{print $3}'`
    sleep $interval
    R2=`grep $interfc /FSS/log/dpdk_stats | awk '{print $2}'`
    PPS2=`grep $interfc /FSS/log/dpdk_stats | awk '{print $3}'`
    RBPS=`expr $R2 - $R1`
    PPS=`expr $PPS2 - $PPS1`
    RKBPS=`expr $RBPS / 1024`
    echo -e "[ $(date +'%Y%m%d-%H:%M:%S') $thisHost $interfc RX:$(bytesToHR $RBPS)$(ToK $PPS)]"
  done
}

#  Outputs like this:
#  $ dpdk_rx eth4
#  [dpdk_rx] Tracking interface traffic for eth4 in 30 second intervals:
#  [ 20200113-22:46:05 host1 eth4 RX: 792.13 MBps   1.32 Mpps]
#  [ 20200113-22:46:35 host1 eth4 RX: 646.82 MBps   1.18 Mpps]
#  [ 20200113-22:47:05 host1 eth4 RX: 657.65 MBps   1.22 Mpps]
